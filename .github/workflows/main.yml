name: Next.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Instalar pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8  # Adjust version if needed

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      
      - name: Restore node_modules
        run: pnpm install --frozen-lockfile
      
      - name: Run Lint
        run: pnpm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      
      - name: Restore node_modules
        run: pnpm install --frozen-lockfile
      
      - name: Run Tests
        run: pnpm test

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [install, lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      
      - name: Restore node_modules
        run: pnpm install --frozen-lockfile

      - name: Test and coverage
        run: pnpm jest --coverage

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=vanillmar_base-app \
            -Dsonar.organization=unipiaget \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [install, lint, test, sonarqube]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      
      - name: Restore node_modules
        run: pnpm install --frozen-lockfile
      
      - name: Build Next.js App
        run: pnpm run build

  # deploy:
  #   name: Deploy to Vercel
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
      
  #     - name: Install Vercel CLI
  #       run: npm install -g vercel
      
  #     - name: Deploy to Vercel
  #       run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
